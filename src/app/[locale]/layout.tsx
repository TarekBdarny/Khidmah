import type { Metadata } from "next";
import { Geist, Geist_Mono, Heebo, Noto_Sans, Tajawal } from "next/font/google";
import "../globals.css";
import { ClerkProvider } from "@clerk/nextjs";
import { notFound } from "next/navigation";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { routing } from "@/i18n/routing";
import NavbarWrapper from "@/components/navbars/NavbarWrapper";
import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";
import { AppSidebar } from "@/components/app-sidebar";
import { ThemeProvider } from "@/components/theme-provider";
const tajawal = Tajawal({
  subsets: ["arabic"],
  weight: ["400", "500", "700"],
  variable: "--font-arabic",
});

// Hebrew font
const heebo = Heebo({
  subsets: ["hebrew"],
  weight: ["400", "500", "700"],
  variable: "--font-hebrew",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
type Props = {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
};

export default async function RootLayout({ children, params }: Props) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  return (
    <html
      lang={locale}
      dir={locale !== "ar" && locale !== "he" ? "ltr" : "rtl"}
      suppressHydrationWarning
    >
      <body className={`${tajawal.variable} ${heebo.variable} antialiased`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <NextIntlClientProvider>
            <ClerkProvider>
              <SidebarProvider defaultOpen={false}>
                <AppSidebar />
                <main className="w-full min-h-screen">
                  <NavbarWrapper />

                  {children}
                </main>
              </SidebarProvider>
            </ClerkProvider>
          </NextIntlClientProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
